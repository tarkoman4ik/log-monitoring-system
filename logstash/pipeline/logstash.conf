input {
    beats {
        port => "${LOGSTASH_PORT}"
    }
}

filter {
  mutate {
    remove_field => ["@version", "log","input","agent","ecs"]
  }
  if [level] == "ERROR" {
    mutate {
      add_field => { "alert" => "true" "pretty_timestamp" => "%{+YYYY-MM-dd HH:mm:ss}"}
    }
    mutate {
      add_field => {
        "telegram_message" => "Logstash Alert - Detected ERROR in application '%{[fields][app_name]}'\nDetails:\n\nApplication name: %{[fields][app_name]}\nTimestamp: %{pretty_timestamp}\nMessage: %{message}\nSpanId: %{spanId}\nTraceId: %{traceId}\nThread: %{thread_name}\nLoggerName: %{logger_name}"
      }
    }
  }
  mutate {
    add_field => { "[@metadata][target_index]" => "app-%{[fields][app_name]}-logs-%{+YYYY.MM.dd}" }
  }
}

output {
  elasticsearch {
      hosts => "${ELASTIC_HOST}"
      index => "%{[@metadata][target_index]}"
      user => "${ELASTIC_USERNAME}"
      password => "${ELASTIC_PASS}"
  }

  if [alert] == "true" {
    email {
      to => "${SENDING_TO}"
      from => "${SMTP_USER}"
      subject => "Logstash Alert - Detected ERROR in application '%{[fields][app_name]}': %{message}"
      body => "Details:\n\nApplication name: %{[fields][app_name]}\nTimestamp: %{pretty_timestamp}\nMessage: %{message}\nSpanId: %{spanId}\nTraceId: %{traceId}\nThread: %{thread_name}\nLoggerName: %{logger_name}"
      via => "smtp"
      address => "smtp.mail.ru"
      port => 587
      username => "${SMTP_USER}"
      password => "${SMTP_PASS}"
      use_tls => true
    }
    http {
      url => "${TELEGRAM_URL_BOT}"
      http_method => "post"
      format => message
      content_type => "application/json"
      message => '{
        "chat_id":"${USER_CHAT_ID}",
        "text":"%{telegram_message}"
      }'
    }
  }

  stdout { 
    codec => rubydebug 
  }
}